package com.example.hop;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.app.ListActivity;
import android.content.ClipData.Item;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.TextView;

import com.parse.FindCallback;
import com.parse.GetCallback;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseQuery;

public class UserSelections extends ListActivity
{
	//ArrayList<MoverItems> items = new ArrayList<MoverItems>();
	ArrayList<ParseObject> items = new ArrayList<ParseObject>();
  private static String logtag = "User Selections Page";
  public String mover_data;
  public String mover_location;
  private TextView moverdata;
  private TextView moverlocation;

  public void onBackPressed()
  {
    setResult(-1, new Intent());
    finish();
  }

  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    // 1. pass context and data to the custom adapter
    ArrayAdapter<ParseObject> adapter = new ArrayAdapter<ParseObject>(this,android.R.layout.activity_user_select, R.id.movie_list, items );
    setListAdapter(adapter);
    
    //MoverAdapter adapter = new MoverAdapter(UserSelections.this.getBaseContext(), generateData());
    
    System.out.println("Setting List adapter");

    //2. setListAdapter
    //setListAdapter(adapter);
  }
  
  private ArrayList<MoverItems> generateData(){
	   
	  
	  Intent localIntent = getIntent();
	    //localIntent.getStringExtra("user");
	    //localIntent.getStringExtra("start_time");
	    //localIntent.getStringExtra("end_time");
	    //localIntent.getStringExtra("date");
	    //localIntent.getStringExtra("location");
	  
	    ParseQuery<ParseObject> query = ParseQuery.getQuery("MoverDataStore");
	    query.whereEqualTo("mover", localIntent.getStringExtra("user"));
	    query.findInBackground(new FindCallback<ParseObject>() {
	    	
	    	public void done(List<ParseObject> moverList, ParseException e) {
	        if (e == null && moverList != null)
	        {
	        	if(!(moverList.isEmpty()))
	        	{
	        		//int size = moverList.size();
	        		//int i=0;
	        		//while (i < size) 
	                //{	        		
	        			items.add((ParseObject) moverList);
	        			/*items.add(new MoverItems(moverList.get(i).getString("mover"),
	        					//moverList.get(i).getString("start_time"),
	        					//moverList.get(i).getString("end_time"),
	        					//moverList.get(i).getString("date"),
	        					moverList.get(i).getString("location")));*/
	        			
	        			
	        			//System.out.println(items.get(i).getLocation());
	        			//i++;
	                //}
	        		
	        		System.out.println("Return items, size : " + items.size());
	        		
	        	}
	        	//System.out.println(moverList.size());
	         //moverdata.setText(String.valueOf(moverList.size()));
	         //moverlocation.setText(obj.getString("location"));
	        	System.out.println("Return items, size : " + items.size());
	        }
	        System.out.println("Return items, size : " + items.size());
	      }
	    	

	    });
	    System.out.println("Return items, size : " + items.size());
	    //return items;
  }

  protected void onDestroy()
  {
    Log.d(logtag, "onDestroy() called");
    super.onDestroy();
  }

  protected void onPause()
  {
    Log.d(logtag, "onPause() called");
    super.onPause();
  }

  protected void onRestart()
  {
    super.onRestart();
  }

  protected void onResume()
  {
    Log.d(logtag, "onResume() called");
    super.onResume();
  }

  protected void onStart()
  {
    Log.d(logtag, "onStart() called");
    super.onStart();
  }

  protected void onStop()
  {
    Log.d(logtag, "onStop() called");
    super.onStop();
  }
}

/* Location:           /Users/rsalecha/Downloads/dex2jar-0.0.9.15/classes_dex2jar.jar
 * Qualified Name:     com.example.hop.UserSelections
 * JD-Core Version:    0.6.2
 */