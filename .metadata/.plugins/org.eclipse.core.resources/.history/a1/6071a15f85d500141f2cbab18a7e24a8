package com.example.hop;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;

import com.parse.FindCallback;
import com.parse.ParseException;
import com.parse.ParseObject;
import com.parse.ParseQuery;

public class MoverItems {

	public String mover;
	public String start_time;
	public String end_time;
	public String date;
	public String location;
	static ArrayList<MoverItems> movers = new ArrayList<MoverItems>();


	public MoverItems(String mover, String start_time,  String end_time,
			String date, String location) {
		super();
		this.mover = mover;
		this.start_time = start_time;
		this.end_time = end_time;
		this.date = date;
		this.location = location;
	}
	
	public static ArrayList<MoverItems> getUsers() {
		
		Intent localIntent = getIntent();
	    //localIntent.getStringExtra("user");
	    //localIntent.getStringExtra("start_time");
	    //localIntent.getStringExtra("end_time");
	    //localIntent.getStringExtra("date");
	    //localIntent.getStringExtra("location");
	  
	    ParseQuery<ParseObject> query = ParseQuery.getQuery("MoverDataStore");
	    query.whereEqualTo("mover", localIntent.getStringExtra("user"));
	    query.findInBackground(new FindCallback<ParseObject>() {
	    	
	    	public void done(List<ParseObject> moverList, ParseException e) {
	        if (e == null && moverList != null)
	        {
	        	if(!(moverList.isEmpty()))
	        	{
	        		int size = moverList.size();
	        		int i=0;
	        		while (i < size) 
	                {	        		
	        			//items.add((ParseObject) moverList);
	        			movers.add(new MoverItems(moverList.get(i).getString("mover"),
	        					moverList.get(i).getString("start_time"),
	        					moverList.get(i).getString("end_time"),
	        					moverList.get(i).getString("date"),
	        					moverList.get(i).getString("location")));
	        			
	        			
	        			//System.out.println(items.get(i).getLocation());
	        			i++;
	                }
	        		
	        		System.out.println("Return items, size : " + movers.size());
	        		
	        	}
	        	//System.out.println(moverList.size());
	         //moverdata.setText(String.valueOf(moverList.size()));
	         //moverlocation.setText(obj.getString("location"));
	        	System.out.println("Return items, size : " + movers.size());
	        }
	        System.out.println("Return items, size : " + movers.size());
	      }
	    	

	    });
		
		return movers;
	}
	
}
